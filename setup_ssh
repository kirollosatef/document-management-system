#!/bin/bash

# A simple script to set up an SSH server

# Update package sources
# read -p "click [ENTER] to update package sources ====================>"
# echo "Updating package sources..."
# apt-get update -y
# if [ $? -ne 0 ]; then
#   echo "Failed to update packages. Check your internet connection and package sources."
#   exit 1
# fi
# Install SSH server application
read -p "click [ENTER] to install SSH server application ============>"
echo "Installing SSH server..."
apt-get install -y openssh-server

# Below are a few configuration options you might commonly adjust.
# By default, this script keeps the standard configuration.

# Define custom SSH port (default is 22)
# Warning: Ports below 1024 require root privileges. Make sure to allow this port through your firewall.
SSH_PORT=22

# Backup the existing SSH server config
read -p "click [ENTER] to backup the existing SSH server config =====>"
echo "Backing up the current SSH config..."
cp /etc/ssh/sshd_config /etc/ssh/sshd_config.factory-defaults

# Uncomment and modify the below lines to make changes to the default configuration.
read -p "click [ENTER] to write new SSH server config ===============>"
echo "Writing new SSH server config..."
sed -i "s/#Port 22/Port $SSH_PORT/" /etc/ssh/sshd_config

# Enable and start SSH server
read -p "click [ENTER] to enable and start SSH server ===============>"
echo "Starting SSH server..."
systemctl start ssh

read -p "click [ENTER] to enable SSH server to start on boot ========>"
echo "Enabling SSH server to start on boot..."
systemctl enable ssh

# If you have a firewall enabled (e.g., UFW), you need to allow your SSH port through.
# If you changed the port above, change it here as well.
read -p "click [ENTER] to adjust firewall rules =====================>"
echo "Adjusting firewall rules..."
ufw allow $SSH_PORT/tcp

echo "SSH server installation and setup complete!"

# Show server IP address (you will need this for SSH connection)
IP_ADDRESSES=$(ip a | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}')
echo "Local IP Addresses: $IP_ADDRESSES"

# Fetch public IP address
echo "Fetching public IP address..."
IP_ADDRESS=$(curl -s ifconfig.me)
if [ $? -ne 0 ]; then
  echo "Could not retrieve public IP address. Check your internet connection."
else
  echo "Public IP Address: $IP_ADDRESS"
  echo "You can now connect to this server via SSH using the following command:"
  echo "ssh root@$IP_ADDRESS -p $SSH_PORT"
fi

# Show SSH fingerprint
echo "SSH fingerprint:"
ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key.pub
